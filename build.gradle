plugins {
  id 'java'
  id 'com.github.johnrengelman.shadow' version '7.0.0' apply false
}

import org.apache.tools.ant.filters.ReplaceTokens

group = 'fr.lapalmeraiemc.polis'
version = '0.1.0'

subprojects {
  plugins.apply('java')
  plugins.apply('com.github.johnrengelman.shadow')

  compileJava.options.encoding = 'UTF-8'

  java {
    toolchain {
      languageVersion.set(JavaLanguageVersion.of(16))
    }
  }

  repositories {
    mavenCentral()
    maven { url 'https://papermc.io/repo/repository/maven-public/' }
    maven { url 'https://repo.aikar.co/content/groups/aikar/' }
    maven { url 'https://jitpack.io' }
  }

  dependencies {
    compileOnly 'org.projectlombok:lombok:1.18.20'
    annotationProcessor 'org.projectlombok:lombok:1.18.20'

    compileOnly 'org.jetbrains:annotations:22.0.0'
    annotationProcessor 'org.jetbrains:annotations:22.0.0'

    implementation 'com.google.guava:guava:30.1.1-jre'

    compileOnly 'io.papermc.paper:paper-api:1.17.1-R0.1-SNAPSHOT'
    compileOnly 'com.github.MilkBowl:VaultAPI:1.7'
  }

  processResources {
    filter(ReplaceTokens, tokens: ['version': rootProject.version])
    filteringCharset = 'UTF-8'
  }

  shadowJar {
    archiveClassifier.set('dist')

    minimize()

    relocate 'com.google', 'fr.lapalmeraiemc.polis.libs.google'
  }

  build.dependsOn(shadowJar)
}

configurations {
  childJars
}

dependencies {
  subprojects.each {
    childJars project(path: it.path, configuration: 'shadow')
  }
}

jar {
  dependsOn configurations.childJars
  from {
    configurations.childJars.collect {
      duplicatesStrategy = DuplicatesStrategy.EXCLUDE
      zipTree it
    }
  }
  archiveFileName = 'Polis.jar'
}
